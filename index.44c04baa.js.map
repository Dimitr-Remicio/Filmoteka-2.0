{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,0BCEMC,EAAY,CAChB,GAAI,YACJ,GAAI,UACJ,GAAI,YACJ,GAAI,QACJ,GAAI,SACJ,GAAI,SACJ,GAAI,SACJ,GAAI,UACJ,GAAI,UACJ,GAAI,WACJ,GAAI,QACJ,GAAI,cACJ,IAAK,kBACL,KAAM,UACN,MAAO,QACP,MAAO,UACP,MAAO,SACP,MAAO,MACP,MAAO,YAGT,SAASC,EAAQC,GAEf,IAAMC,EAAMD,EAAME,OAClB,GAAY,IAARD,EAAW,MAAO,GAGtB,IADA,IASeE,EATXC,EAAI,GACCC,EAAI,EAAGA,EAAIC,KAAKC,IAAI,EAAGN,GAAMI,GAAK,EACzCD,EAAEI,MAOWL,EAPEH,EAAMK,GAQhBP,EAAUK,IAAO,iBAAoBM,OAAHN,EAAG,OAJ5C,OAFIF,EAAM,GAAGG,EAAEI,KAAK,SAEbJ,EAAEM,KAAK,K,CD/BhB,I,EAAMC,EAAcC,SAASC,eAAe,UACtCC,EAAaF,SAASG,cAAc,gBACpCC,EAAiBJ,SAASG,cAAc,eAuB9C,SAASE,EAAgBC,GAEvB,IAAQC,EAA4DD,EAA5DC,MAAOC,EAAqDF,EAArDE,YAAaC,EAAwCH,EAAxCG,aAAcC,EAA0BJ,EAA1BI,WAAYC,EAAcL,EAAdK,UAChDC,EAAYZ,SAASa,cAAc,MACzCD,EAAUE,UAAUC,IAAI,cAExB,IAAMC,EAAchB,SAASa,cAAc,OAC3CG,EAAYC,IAAM,kCAA8CpB,OAAZW,GACpDQ,EAAYE,IAAMX,EAClBS,EAAYF,UAAUC,IAAI,qBAE1B,IAAMI,EAAanB,SAASa,cAAc,MAC1CM,EAAWL,UAAUC,IAAI,gBACzBI,EAAWC,YAAcb,EAEzB,IAAMc,EAAarB,SAASa,cAAc,KAC1CQ,EAAWP,UAAUC,IAAI,gBACzBM,EAAWD,YAAc,GAA2BvB,OAAxBV,EAAQwB,GAAW,OAAkBd,OAAbY,GAEpD,IAAMa,EAAetB,SAASa,cAAc,QAU5C,OATAS,EAAaR,UAAUC,IAAI,kBAC3BO,EAAaF,YAAc,GAAcvB,OAAXa,GAE9BW,EAAWE,YAAYD,GAEvBV,EAAUW,YAAYP,GACtBJ,EAAUW,YAAYJ,GACtBP,EAAUW,YAAYF,GAEfT,C,CAlDRV,EAAUsB,iBAAiB,U,EAAUC,EAAAzC,EAAA,CAAAyC,EAAAC,GAAAC,MAAA,SAAAC,EAAOC,G,IAErCC,EAGIC,E,qEAJVF,EAAEG,iBAEqB,MADjBF,EAAU/B,EAAYkC,OAChBC,OAAa,C,yCAEAC,EAAAC,SAASC,mBAAmBP,G,OAA3CC,EAAMO,EAAAC,KAEXnC,EAAcoC,UAAY,GAI3BT,EAAOU,QAAQC,SAAQ,SAACpC,GACtB,IAAMM,EAAYP,EAAgBC,GAClCF,EAAemB,YAAYX,E,sDAG7B+B,QAAQC,MAAKN,EAAAO,I,mEAhB0BhB,G","sources":["src/js/search-keyword.js","src/js/genres.js"],"sourcesContent":["import { data, services } from '../js/api-consume';\nimport { getName, getSome } from '../js/genres';\n\n// Obtener elementos del DOM\nconst searchInput = document.getElementById('search');\nconst searchForm = document.querySelector('.search-form');\nconst cardsMovieList = document.querySelector('.cardsMovie');\n// Agregar evento de envío de formulario\nsearchForm.addEventListener('submit', async (e) => {\n  e.preventDefault(); // Evitar el comportamiento predeterminado del formulario\n  const keyword = searchInput.value;\n  if (keyword.trim() !== '') {\n    try {\n      const movies = await services.getMoviesByKeyWord(keyword);\n      // Limpiar la lista de tarjetas de películas\n      cardsMovieList.innerHTML = '';\n      // Mostrar los resultados en la lista\n      // console.log(movies.results, movies);\n\n      movies.results.forEach((movie) => {\n        const movieCard = createMovieCard(movie);\n        cardsMovieList.appendChild(movieCard);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n});\n// Función para crear una tarjeta de película\nfunction createMovieCard(movie) {\n  // console.log(movie);\n  const { title, poster_path, release_date, popularity, genre_ids } = movie;\n  const movieCard = document.createElement('li');\n  movieCard.classList.add('movie-card');\n\n  const moviePoster = document.createElement('img');\n  moviePoster.src = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  moviePoster.alt = title;\n  moviePoster.classList.add('cardsMovie__image');\n\n  const movieTitle = document.createElement('h2');\n  movieTitle.classList.add('movie__title');\n  movieTitle.textContent = title;\n\n  const movieGenre = document.createElement('p');\n  movieGenre.classList.add('movie__genre');\n  movieGenre.textContent = `${getSome(genre_ids)} | ${release_date}`;\n\n  const moviePopular = document.createElement('span');\n  moviePopular.classList.add('movie__popular');\n  moviePopular.textContent = `${popularity}`;\n\n  movieGenre.appendChild(moviePopular);\n\n  movieCard.appendChild(moviePoster);\n  movieCard.appendChild(movieTitle);\n  movieCard.appendChild(movieGenre);\n\n  return movieCard;\n}","//OD - class for Genres: methods getSome(idArr) and getAll(idArr) to be used for obtaining genres string for cards\n\nconst genresAll = {\n  12: 'Adventure',\n  14: 'Fantasy',\n  16: 'Animation',\n  18: 'Drama',\n  27: 'Horror',\n  28: 'Action',\n  35: 'Comedy',\n  36: 'History',\n  37: 'Western',\n  53: 'Thriller',\n  80: 'Crime',\n  99: 'Documentary',\n  878: 'Science Fiction',\n  9648: 'Mystery',\n  10402: 'Music',\n  10749: 'Romance',\n  10751: 'Family',\n  10752: 'War',\n  10770: 'TV Movie',\n};\n\nfunction getSome(idArr) {\n\n  const len = idArr.length;\n  if (len === 0) return '';\n\n  let n = [];\n  for (let i = 0; i < Math.min(2, len); i += 1) {\n    n.push(getName(idArr[i]));\n  }\n  if (len > 2) n.push('Other');\n\n  return n.join(', ');\n}\n\nfunction getName(id) {\n  return genresAll[id] || `Unknown genre(${id})`;\n}\n\nexport { getName, getSome }"],"names":["$bpxeT","parcelRequire","$058be7baf2d85bd2$var$genresAll","$058be7baf2d85bd2$export$daf0b85ee81478f","idArr","len","length","id","n","i","Math","min","push","concat","join","$781c03365efef2dc$var$searchInput","document","getElementById","$781c03365efef2dc$var$searchForm","querySelector","$781c03365efef2dc$var$cardsMovieList","$781c03365efef2dc$var$createMovieCard","movie","title","poster_path","release_date","popularity","genre_ids","movieCard","createElement","classList","add","moviePoster","src","alt","movieTitle","textContent","movieGenre","moviePopular","appendChild","addEventListener","$parcel$interopDefault","$2TvXO","mark","_callee","e","keyword","movies","preventDefault","value","trim","$82uKS","services","getMoviesByKeyWord","_ctx","sent","innerHTML","results","forEach","console","error","t0"],"version":3,"file":"index.44c04baa.js.map"}